version: 2.1

orbs:
  docker: circleci/docker@1.7.0
  k8s: digitalocean/k8s@0.1.1
  kubernetes: circleci/kubernetes@0.11.2
  slack: circleci/slack@4.1.4
  browser-tools: circleci/browser-tools@1.1.1
  jq: circleci/jq@2.2.0
  kuz: finc/kustomize@0.0.1
  envsbt: sawadashota/envsubst@1.1.0

commands:
  deploy:
    description: "deliver application to kubernetes cluster"
    parameters:
      token:
        type: string
        default: "TF_VAR_do_token"
      environment:
        type: string
      image:
        type: string
        default: "gathertown/casper-3"
      cluster:
        type: string
        default: abcd
      provider:
        type: string
      subdomain:
        type: string
        default: ""
      zone:
        type: string
      level:
        type: string
        default: "info"
    steps:
      - checkout
      - k8s/install
      - kuz/install:
          version: "v4.0.1"
      - k8s/initialize:
          cluster: << parameters.cluster >>
      - envsbt/install
      - run:
          environment:
            - ENV: <<parameters.environment>>
            - PROVIDER: <<parameters.provider>>
            - SUBDOMAIN: <<parameters.subdomain>>
            - ZONE: <<parameters.zone>>
            - LOGLEVEL: <<parameters.level>>
          command: |
            mkdir ~/.secrethub
            echo ${SECRETHUB_CREDENTIAL} > ~/.secrethub/credential
            curl -LO https://github.com/secrethub/secrethub-cli/releases/download/v0.41.2/secrethub-v0.41.2-linux-amd64.tar.gz
            tar zxvf secrethub-v0.41.2-linux-amd64.tar.gz -C /tmp
            mkdir -p deployments/base/secrets deployments/overlays/cluster/secrets
            /tmp/bin/secrethub read -n gather/gather-town/deploy/terraform/dockerhub_credentials > deployments/base/secrets/priv-docker-registry
            /tmp/bin/secrethub read -n gather/gather-town/deploy/terraform/<<parameters.token>>  > deployments/overlays/cluster/secrets/TOKEN
            cd deployments/overlays/cluster
            kustomize edit set image << parameters.image >>:${CIRCLE_SHA1:0:9}
            envsubst < deployment.yaml > deployment-temp.yaml
            rm -f deployment.yaml
            mv deployment-temp.yaml deployment.yaml
            kustomize build . | kubectl apply -f -
  build-and-push:
    description: "build and push docker image to registry"
    parameters:
      image:
        type: string
        default: "gathertown/casper-3"
      dockerfile:
        type: string
        default: "Dockerfile"
    steps:
      - checkout
      - docker/build:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
          tag: ${CIRCLE_SHA1:0:9}
      - docker/check
      - docker/push:
          image: <<parameters.image>>
          tag: ${CIRCLE_SHA1:0:9}

jobs:
  build-and-push:
    parameters:
      image:
        type: string
        default: "gathertown/casper-3"
      dockerfile:
        type: string
        default: "Dockerfile"
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - build-and-push:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
  deploy:
    parameters:
      environment:
        type: string
      token:
        type: string
      cluster:
        type: string
      provider:
        type: string
      subdomain:
        type: string
        default: ""
      zone:
        type: string
      level:
        type: string
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - deploy:
          environment: <<parameters.environment>>
          token: <<parameters.token>>
          cluster: <<parameters.cluster>>
          provider: <<parameters.provider>>
          subdomain: <<parameters.subdomain>>
          zone: <<parameters.zone>>
          level: <<parameters.level>>

workflows:
  build-and-push:
    jobs:
      - build-and-push:
          dockerfile: Dockerfile
          filters:
            branches:
              only:
                - develop
                - staging
                - main

      # development cluster
      - deploy:
          name: development
          requires:
            - build-and-push
          environment: development
          token: TF_VAR_do_token
          cluster: $K8S_DEV_NYC1
          provider: digitalocean
          subdomain: dev
          zone: k8s.gather.town
          level: info
          filters:
            branches:
              only:
                - develop

      # staging clusters
      - deploy: &deploy-staging
          name: staging-do-nyc3-a
          requires:
            - build-and-push
          token: TF_VAR_cf_token
          environment: staging-do-nyc3-a
          cluster: $K8S_STG_NYC3_A
          provider: cloudflare
          subdomain: nyc3-a.stg.do
          zone: gather.town
          level: info
          filters:
            branches:
              only:
                - staging
      - deploy:
          <<: *deploy-staging
          name: staging-do-fra1-a
          environment: staging-do-fra1-a
          cluster: $K8S_STG_FRA1_A
          subdomain: fra1-a.stg.do

      # production clusters
      - deploy: &deploy-production
          name: production-do-blr1-a
          requires:
            - build-and-push
          token: TF_VAR_cf_token
          environment: production-do-blr1-a
          cluster: $K8S_PROD_BLR1_A
          provider: cloudflare
          subdomain: blr1-a.prod.do
          zone: gather.town
          level: info
          filters:
            branches:
              only:
                - main
      - deploy:
          <<: *deploy-production
          name: production-do-fra1-a
          environment: production-do-fra1-a
          cluster: $K8S_PROD_FRA1_A
          subdomain: fra1-a.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-fra1-b
          environment: production-do-fra1-b
          cluster: $K8S_PROD_FRA1_B
          subdomain: fra1-b.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-sgp1-a
          environment: production-do-sgp1-a
          cluster: $K8S_PROD_SGP1_A
          subdomain: sgp1-a.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-sgp1-b
          environment: production-do-sgp1-b
          cluster: $K8S_PROD_SGP1_B
          subdomain: sgp1-b.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-sfo3-a
          environment: production-do-sfo3-a
          cluster: $K8S_PROD_SFO3_A
          subdomain: sfo3-a.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-sfo3-b
          environment: production-do-sfo3-b
          cluster: $K8S_PROD_SFO3_B
          subdomain: sfo3-b.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-a
          environment: production-do-nyc3-a
          cluster: $K8S_PROD_NYC3_A
          subdomain: nyc3-a.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-b
          environment: production-do-nyc3-b
          cluster: $K8S_PROD_NYC3_B
          subdomain: nyc3-b.prod.do

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-c
          environment: production-do-nyc3-c
          cluster: $K8S_PROD_NYC3_C
          subdomain: nyc3-c.prod.do
