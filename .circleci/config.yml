version: 2.1
parameters:
  cluster_id_dev:
    type: string
    default: d52645d0-93e9-4594-aa9a-7b9dbecef8c5
  cluster_id_stg:
    type: string
    default: 4151426f-a6f6-402c-b469-73ea1683af1c
  cluster_id_prod:
    type: string
    default: 093da1a0-cf76-4c0f-8046-a7a83eebacf5
  cluster_id_stg_do_nyc3_a:
    type: string
    default: 95a857e0-c10b-415e-83a3-4666e1d66005
  cluster_id_stg_do_fra1_a:
    type: string
    default: a366a34a-4f57-4fbf-a892-097b7c7d5771

orbs:
  docker: circleci/docker@1.4.0
  k8s: digitalocean/k8s@0.1.1
  kubernetes: circleci/kubernetes@0.11.2
  slack: circleci/slack@4.1.4
  browser-tools: circleci/browser-tools@1.1.1
  jq: circleci/jq@2.2.0
  kuz: finc/kustomize@0.0.1

executors:
  build-executor:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: medium

commands:
  deploy:
    description: "deliver application to kubernetes cluster"
    parameters:
      token:
        type: string
        default: "TF_VAR_do_token"
      environment:
        type: string
      image:
        type: string
        default: "gathertown/casper-3"
      cluster:
        type: string
        default: abcd
    steps:
      - checkout
      - get-commit-shorthash
      - k8s/install
      - kuz/install:
          version: "v4.0.1"
      - k8s/initialize:
          cluster: << parameters.cluster >>
      - run:
          command: |
            mkdir ~/.secrethub
            echo ${SECRETHUB_CREDENTIAL} > ~/.secrethub/credential
            curl -LO https://github.com/secrethub/secrethub-cli/releases/download/v0.41.2/secrethub-v0.41.2-linux-amd64.tar.gz
            tar zxvf secrethub-v0.41.2-linux-amd64.tar.gz -C /tmp
            mkdir -p deployments/base/secrets deployments/overlays/<<parameters.environment>>/secrets
            /tmp/bin/secrethub read -n gather/gather-town/deploy/terraform/dockerhub_credentials > deployments/base/secrets/priv-docker-registry
            /tmp/bin/secrethub read -n gather/gather-town/deploy/terraform/<<parameters.token>>  > deployments/overlays/<<parameters.environment>>/secrets/TOKEN
            cd deployments/overlays/<<parameters.environment>>
            kustomize edit set image << parameters.image >>:${SHORTHASH}
            kustomize build . | kubectl apply -f -
  get-commit-shorthash:
    steps:
      - run:
          name: Get git commit shorthash
          command: |
            echo 'export SHORTHASH="$(git rev-parse --short HEAD)"' >> $BASH_ENV
  build-and-push:
    description: "build and push docker image to registry"
    parameters:
      image:
        type: string
        default: "gathertown/casper-3"
      dockerfile:
        type: string
        default: "Dockerfile"
    steps:
      - checkout
      - get-commit-shorthash
      - docker/build:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
          tag: $SHORTHASH
      - docker/check
      - docker/push:
          image: <<parameters.image>>
          tag: $SHORTHASH

jobs:
  build-and-push:
    parameters:
      executor:
        default: build-executor
        type: executor
      image:
        type: string
        default: "gathertown/casper-3"
      dockerfile:
        type: string
        default: "Dockerfile"
    executor: <<parameters.executor>>
    steps:
      - build-and-push:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
  deploy:
    parameters:
      executor:
        default: build-executor
        type: executor
      environment:
        type: string
      token:
        type: string
      cluster:
        type: string
    executor: <<parameters.executor>>
    steps:
      - deploy:
          environment: <<parameters.environment>>
          token: <<parameters.token>>
          cluster: <<parameters.cluster>>

workflows:
  build-and-push:
    jobs:
      - build-and-push:
          dockerfile: Dockerfile
          filters:
            branches:
              only:
                - develop
                - staging
                - main
      - deploy:
          name: deploy-development
          requires:
            - build-and-push
          environment: development
          token: TF_VAR_do_token
          cluster: << pipeline.parameters.cluster_id_dev >>
          filters:
            branches:
              only:
                - develop
      - deploy:
          name: deploy-staging
          requires:
            - build-and-push
          token: TF_VAR_do_token
          environment: staging
          cluster: << pipeline.parameters.cluster_id_stg >>
          filters:
            branches:
              only:
                - staging
      - deploy:
          name: deploy-staging-do-nyc3-a
          requires:
            - build-and-push
          token: TF_VAR_cf_token
          environment: staging-do-nyc3-a
          cluster: << pipeline.parameters.cluster_id_stg_do_nyc3_a >>
          filters:
            branches:
              only:
                - staging
      - deploy:
          name: deploy-staging-do-fra1-a
          requires:
            - build-and-push
          token: TF_VAR_cf_token
          environment: staging-do-fra1-a
          cluster: << pipeline.parameters.cluster_id_stg_do_fra1_a >>
          filters:
            branches:
              only:
                - staging
      - deploy:
          name: deploy-production
          requires:
            - build-and-push
          environment: production
          token: TF_VAR_cf_token
          cluster: << pipeline.parameters.cluster_id_prod >>
          filters:
            branches:
              only:
                - main
